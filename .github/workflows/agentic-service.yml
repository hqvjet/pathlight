name: CICD For Agentic Service

on: 
  # push:
  #   branches:
  #     - main
  #     - develop
  #   paths:
  #     - 'services/agentic-service/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'services/agentic-service/**'

jobs:

  # Build Docker Image
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Build Docker Image
        run: |
          docker build -t pathlight/agentic_service services/agentic-service
          docker save pathlight/agentic_service -o agentic-service.tar
          echo "Docker image 'pathlight/agentic_service' built successfully."

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-agentic-service
          path: agentic-service.tar

  # Run Tests
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: pip install -r services/agentic-service/requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Load Environment Variables
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> services/agentic-service/.env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> services/agentic-service/.env
          echo "REGION=${{ secrets.REGION }}" >> services/agentic-service/.env
          echo "ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }}" >> services/agentic-service/.env
          echo "SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }}" >> services/agentic-service/.env
          echo "OPENSEARCH_HOST=${{ secrets.OPENSEARCH_HOST }}" >> services/agentic-service/.env
          echo "OPENSEARCH_PORT=${{ secrets.OPENSEARCH_PORT }}" >> services/agentic-service/.env
          echo "OPENSEARCH_USERNAME=${{ secrets.OPENSEARCH_USERNAME }}" >> services/agentic-service/.env
          echo "OPENSEARCH_PASSWORD=${{ secrets.OPENSEARCH_PASSWORD }}" >> services/agentic-service/.env

      - name: Run Tests
        run: |
          cd services/agentic-service
          echo "ðŸ§ª Running unit tests..."
          pytest -v
    
  # Push Image to ECR and Deploy to Lambda
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Use Artifact from Build
        uses: actions/download-artifact@v4
        with:
          name: docker-agentic-service

      - name: Load Docker Image Artifact
        run: |
          docker load -i agentic-service.tar 
          echo "Docker image 'pathlight/agent_service' loaded successfully."

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Push Agentic Service Image into AWS ECR
        run: |
          aws ecr get-login-password --region ap-northeast-1| docker login --username AWS --password-stdin ${{ secrets.ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com
          docker tag pathlight/agentic_service:latest ${{ secrets.ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com/pathlight/agentic_service:latest
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com/pathlight/agentic_service:latest
          echo "âœ… Docker image 'pathlight/agentic_service' pushed to ECR successfully."
          sleep 10 # Wait for ECR to process the image

      - name: Update Lambda Function Code from ECR
        run: |
          aws lambda update-function-code --function-name pathlight-agentic-service --image-uri ${{ secrets.ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com/pathlight/agentic_service:latest
          echo "âœ… Lambda function code updated successfully."

      - name: Update Lambda Environment Variables (Non-AWS secrets only)
        run: |
          sleep 20 # Wait for the Lambda function to be updated
          aws lambda update-function-configuration --function-name pathlight-agentic-service --environment \
          "Variables={OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}, S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}, REGION=${{ secrets.REGION }}, \
          ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }}, SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }}, \
          OPENSEARCH_HOST=${{ secrets.OPENSEARCH_HOST }}, OPENSEARCH_PORT=${{ secrets.OPENSEARCH_PORT }}, \
          OPENSEARCH_USERNAME=${{ secrets.OPENSEARCH_USERNAME }}, OPENSEARCH_PASSWORD=${{ secrets.OPENSEARCH_PASSWORD }}, \
          OPENSEARCH_INDEX_NAME=${{ secrets.OPENSEARCH_INDEX_NAME }}}"
          echo "âœ… Lambda environment variables updated successfully."

      - name: Notify Deployment Success
        run: echo "Deployment of Agentic Service completed successfully."