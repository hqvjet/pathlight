version: '3.8'

services:
  # Database service
  pathlight-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pathlight-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    env_file:
      - ./.env.local
    networks:
      - pathlight-network
    depends_on:
      pathlight-postgres:
        condition: service_healthy

  course-service:
    build:
      context: ./course-service
      dockerfile: Dockerfile
    ports:
      - "${COURSE_SERVICE_PORT}:${COURSE_SERVICE_PORT}"
    env_file:
      - ./.env.local
    networks:
      - pathlight-network
    depends_on:
      pathlight-postgres:
        condition: service_healthy

  quiz-service:
    build:
      context: ./quiz-service
      dockerfile: Dockerfile
    ports:
      - "${QUIZ_SERVICE_PORT}:${QUIZ_SERVICE_PORT}"
    env_file:
      - ./.env.local
    networks:
      - pathlight-network
    depends_on:
      pathlight-postgres:
        condition: service_healthy

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    env_file:
      - ./.env.local
    networks:
      - pathlight-network
    depends_on:
      pathlight-postgres:
        condition: service_healthy

networks:
  pathlight-network:
    driver: bridge

volumes:
  postgres_data:
