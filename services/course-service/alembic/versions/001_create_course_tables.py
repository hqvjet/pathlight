"""Create course related tables

Revision ID: 001
Revises: 
Create Date: 2025-06-19 14:40:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create understand_level_tag table first
    op.create_table('understand_level_tag',
    sa.Column('understand_level_id', sa.String(), nullable=False),
    sa.Column('understand_level', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('understand_level_id')
    )
    
    # Create course_info table
    op.create_table('course_info',
    sa.Column('course_info_id', sa.String(), nullable=False),
    sa.Column('understand_level_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['understand_level_id'], ['understand_level_tag.understand_level_id'], ),
    sa.PrimaryKeyConstraint('course_info_id')
    )
    
    # Create course table
    op.create_table('course',
    sa.Column('course_id', sa.String(), nullable=False),
    sa.Column('course_info_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('finish', sa.Boolean(), nullable=False, server_default='false'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['course_info_id'], ['course_info.course_info_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    
    # Create lesson table
    op.create_table('lesson',
    sa.Column('lesson_id', sa.String(), nullable=False),
    sa.Column('course_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('img_url', sa.String(), nullable=False),
    sa.Column('finish', sa.Boolean(), nullable=False, server_default='false'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.PrimaryKeyConstraint('lesson_id')
    )
    
    # Create test table
    op.create_table('test',
    sa.Column('test_id', sa.String(), nullable=False),
    sa.Column('lesson_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('finish', sa.Boolean(), nullable=False, server_default='false'),
    sa.Column('exp_int', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.lesson_id'], ),
    sa.PrimaryKeyConstraint('test_id')
    )
    
    # Create difficult_level table
    op.create_table('difficult_level',
    sa.Column('difficult_level_id', sa.String(), nullable=False),
    sa.Column('difficult_level', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('difficult_level_id')
    )
    
    # Create lesson_qa table
    op.create_table('lesson_qa',
    sa.Column('qa_id', sa.String(), nullable=False),
    sa.Column('test_id', sa.String(), nullable=False),
    sa.Column('difficult_level_id', sa.String(), nullable=False),
    sa.Column('question', sa.Text(), nullable=True),
    sa.Column('option1', sa.String(), nullable=True),
    sa.Column('option2', sa.String(), nullable=True),
    sa.Column('option3', sa.String(), nullable=True),
    sa.Column('option4', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['difficult_level_id'], ['difficult_level.difficult_level_id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test.test_id'], ),
    sa.PrimaryKeyConstraint('qa_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lesson_qa')
    op.drop_table('difficult_level')
    op.drop_table('test')
    op.drop_table('lesson')
    op.drop_table('course')
    op.drop_table('course_info')
    op.drop_table('understand_level_tag')
    # ### end Alembic commands ###
